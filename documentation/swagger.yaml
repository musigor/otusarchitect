swagger: "2.0"
info:
  description: "Simple shop system with basic functionality like products catalog / search / cart and order mechanism. Current version supports only small bunch of CRUD methods for user and product entities."
  version: "0.1.0"
  title: "Simple eCommerce System"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "igor@musitschenko.de"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/api"
tags:
  - name: "users"
    description: "Backend user management"
  - name: "products"
    description: "Products catalog"
schemes:
  - "http"
paths:
  /users:
    post:
      tags:
        - "users"
      summary: "Create new user"
      description: ""
      operationId: "createUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: "success"
        422:
          description: "Unprocessable Entity"
    put:
      tags:
        - "users"
      summary: "Update an existing user"
      description: ""
      operationId: "updateUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/UserUpdate"
      responses:
        200:
          description: "success"
        422:
          description: "Unprocessable Entity"
  /login:
    post:
      tags:
        - "users"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/UserLogin"
      responses:
        200:
          description: "success"
        401:
          description: "please check your credentials"
  /logout:
    get:
      tags:
        - "users"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "success"
  /products:
    get:
      tags:
        - "products"
      summary: "Returns all products"
      operationId: "getProducts"
      produces:
        - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
    post:
      tags:
        - "products"
      summary: "Add product to catalog"
      description: "This can only be done by the logged in user."
      operationId: "createProducts"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        200:
          description: "success"
        422:
          description: "Unprocessable Entity"
    put:
      tags:
        - "products"
      summary: "Update product data"
      description: "This can only be done by the logged in user."
      operationId: "updateProducts"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/ProductUpdate"
      responses:
        200:
          description: "success"
        422:
          description: "Unprocessable Entity"

definitions:
  UserLogin:
    type: "object"
    required:
      - "email"
      - "password"
    properties:
      email:
        type: "string"
      password:
        type: "string"
    xml:
      name: "User"
  User:
    type: "object"
    required:
      - "email"
      - "firstname"
      - "lastname"
      - "password"
    properties:
      email:
        type: "string"
      firstname:
        type: "string"
      lastname:
        type: "string"
      password:
        type: "string"
    xml:
      name: "User"
  UserUpdate:
    type: "object"
    required:
      - "id"
      - "email"
      - "firstname"
      - "lastname"
      - "password"
    properties:
      id:
        type: "integer"
        format: "int64"
      email:
        type: "string"
      firstname:
        type: "string"
      lastname:
        type: "string"
      password:
        type: "string"
    xml:
      name: "User"
  Product:
    type: "object"
    required:
      - "sku"
      - "name"
      - "description"
    properties:
      sku:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
    xml:
      name: "Product"
  ProductUpdate:
    type: "object"
    required:
      - "id"
      - "sku"
      - "name"
      - "description"
    properties:
      id:
        type: "integer"
        format: "int64"
      sku:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
    xml:
      name: "Product"